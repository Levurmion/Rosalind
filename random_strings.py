# Random Strings

'''
Given a DNA string s of length at most 100 bp and an array A containing at most 20 numbers between 0 and 1, return an array B of the same length as A where B[k] represents the common logarithmic probability that a random string generated by the GC-content found in A[k] will match s exactly.
'''

from math import log


DNA_STRING = 'TGGGGTTCCTTTGGGCCGAAGCGATCCCAGCGATTATGGTATTATACGTCTCTGGAGACGAACCATAACAGACAGATTATCCTACGGGCATAAA'
A = '0.088 0.157 0.222 0.273 0.280 0.367 0.420 0.488 0.522 0.596 0.646 0.667 0.729 0.820 0.870 0.894'
A = A.split(' ')
A = [float(a) for a in A]

B = []

G_count = 0
C_count = 0
A_count = 0
T_count = 0


for base in DNA_STRING:

    if base == 'G':
        G_count += 1

    elif base == 'C':
        C_count += 1

    elif base == 'A':
        A_count += 1
    
    elif base == 'T':
        T_count += 1


for gc_content in A:

    g_prob = gc_content/2
    c_prob = gc_content/2
    a_prob = (1-gc_content)/2
    t_prob = (1-gc_content)/2

    probability = (g_prob**G_count)*(c_prob**C_count)*(a_prob**A_count)*(t_prob**T_count)
    log_probability = log(probability,10)

    B.append(log_probability)

for b in B:
    print(b,end=' ')